{"map":"{\"version\":3,\"sources\":[\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Header.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Navigation.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Main.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Matches.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Practises.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Players.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Stats.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Content.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/App.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/serviceWorker.js\",\"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/index.js\"],\"names\":[\"Header\",\"react_default\",\"a\",\"createElement\",\"className\",\"Navigation\",\"_ref\",\"content\",\"changeContent\",\"lilist\",\"id\",\"title\",\"map\",\"links\",\"key\",\"onClick\",\"Main\",\"Matches\",\"teamdata\",\"_useState\",\"useState\",\"Array\",\"matches\",\"length\",\"fill\",\"_useState2\",\"Object\",\"slicedToArray\",\"rowInfo\",\"setRowInfo\",\"rows\",\"slice\",\"reverse\",\"match\",\"index\",\"resultClass\",\"result\",\"ourgoals\",\"theirgoals\",\"scores\",\"_loop\",\"i\",\"player\",\"players\",\"find\",\"object\",\"scorers\",\"push\",\"lname\",\"fname\",\"assists\",\"_loop2\",\"rowInfos\",\"toConsumableArray\",\"Toggle\",\"date\",\"location\",\"opponent\",\"Practises\",\"practises\",\"practise\",\"participants\",\"Players\",\"userinput\",\"setUserinput\",\"playerlist\",\"sort\",\"b\",\"toLowerCase\",\"startsWith\",\"includes\",\"number\",\"role\",\"autoFocus\",\"type\",\"onChange\",\"event\",\"input\",\"target\",\"value\",\"Stats\",\"showroles\",\"setShowroles\",\"_useState3\",\"_useState4\",\"statstype\",\"setStatstype\",\"selectionHandler\",\"barOptions\",\"responsive\",\"maintainAspectRatio\",\"tooltips\",\"titleFontSize\",\"bodyFontSize\",\"display\",\"text\",\"fontSize\",\"legend\",\"scales\",\"yAxes\",\"ticks\",\"xAxes\",\"position\",\"beginAtZero\",\"precision\",\"points\",\"k\",\"name\",\"entries\",\"filter\",\"e\",\"chartdata\",\"chartlabels\",\"data\",\"labels\",\"datasets\",\"label\",\"backgroundColor\",\"borderColor\",\"es\",\"options\",\"Content\",\"selected_content\",\"src_Main\",\"src_Matches\",\"src_Practises\",\"src_Players\",\"src_Stats\",\"App\",\"setContent\",\"setTeamData\",\"useEffect\",\"axios\",\"get\",\"then\",\"response\",\"catch\",\"error\",\"console\",\"log\",\"src_Header\",\"src_Navigation\",\"src_Content\",\"Boolean\",\"window\",\"hostname\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"mKAceA,EAXA,WAGb,OACEC,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,IAAA,KAHc,MAIdF,EAAAC,EAAAC,cAAA,KAAA,KALa,sBC0CJE,EA3CI,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,cAWvBC,EATQ,CACZ,CAAEC,GAAM,OAAQC,MAAS,iBACzB,CAAED,GAAM,UAAWC,MAAS,WAC5B,CAAED,GAAM,YAAaC,MAAS,gBAC9B,CAAED,GAAM,UAAWC,MAAS,YAC5B,CAAED,GAAM,QAASC,MAAS,aAIPC,IAAI,SAACC,GAExB,OAAIA,EAAMH,KAAOH,EAERN,EAAAC,EAAAC,cAAA,KAAA,CACLW,IAAKD,EAAMH,GACXA,GAAIG,EAAMH,GACVK,QAASP,EACTJ,UAAU,UACTS,EAAMF,OAKFV,EAAAC,EAAAC,cAAA,KAAA,CACLW,IAAKD,EAAMH,GACXA,GAAIG,EAAMH,GACVK,QAASP,GACRK,EAAMF,SAKb,OACEV,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAA,KACGM,KC5BMO,EATF,WACX,OACEf,EAAAC,EAAAC,cAAA,UAAA,KACEF,EAAAC,EAAAC,cAAA,IAAA,KAAA,kFAA+EF,EAAAC,EAAAC,cAAA,KAAA,MAC/EF,EAAAC,EAAAC,cAAA,IAAA,KAAA,8HCmGSc,EAvGC,SAAAX,GAAkB,IAAfY,EAAeZ,EAAfY,SAAeC,EAGFC,OAAAA,EAAAA,SAAAA,CAG5BC,MAAMH,EAASI,QAAQC,QAAQC,MAAK,IANNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAGzBS,EAHyBH,EAAA,GAGhBI,EAHgBJ,EAAA,GA2B1BK,EAAOZ,EAASI,QAAQS,MAAM,GAAGC,UAAUpB,IAAI,SAACqB,EAAOC,GAC3D,IAAIC,EACAC,EACAH,EAAMI,SAAWJ,EAAMK,YACzBH,EAAc,SACdC,EAAS,eAEFH,EAAMI,SAAWJ,EAAMK,YAC9BH,EAAc,MACdC,EAAS,WAGTD,EAAc,OACdC,EAAS,YAKX,IADA,IAAMG,EAAS,GAjBsDC,EAAA,SAkB5DC,GAGP,IAAIC,EAASxB,EAASyB,QAAQC,KAAK,SAAAC,GAAM,OAAIA,EAAOnC,KAAOuB,EAAMa,QAAQL,KAGzEF,EAAOQ,KAAK9C,EAAAC,EAAAC,cAAA,KAAA,CAAIW,IAAK2B,EAAI,UAAYR,EAAMvB,IAAKgC,EAAOM,MAAQ,IAAMN,EAAOO,MAAM,GAAK,OANhFR,EAAI,EAAGA,EAAIR,EAAMa,QAAQvB,OAAQkB,IAAKD,EAAtCC,GAUT,IAAMS,EAAU,GA5BqDC,EAAA,SA6B5DV,GACP,IAAIC,EAASxB,EAASyB,QAAQC,KAAK,SAAAC,GAAM,OAAIA,EAAOnC,KAAOuB,EAAMiB,QAAQT,KACzES,EAAQH,KAAK9C,EAAAC,EAAAC,cAAA,KAAA,CAAIW,IAAK2B,EAAI,YAAcR,EAAMvB,IAAKgC,EAAOM,MAAQ,IAAMN,EAAOO,MAAM,GAAK,OAF5F,IAASR,EAAI,EAAGA,EAAIR,EAAMiB,QAAQ3B,OAAQkB,IAAKU,EAAtCV,GAKT,OACExC,EAAAC,EAAAC,cAAA,KAAA,CAAIW,IAAK,MAAQoB,EAAOnB,QAAS,WAAA,OAjDtB,SAAAmB,GAEb,IAAIkB,EAAQ1B,OAAA2B,EAAA,EAAA3B,CAAOE,GAEnBwB,EAASlB,IAAUkB,EAASlB,GAE5BL,EAAWuB,GA2C8BE,CAAOpB,KAC5CjC,EAAAC,EAAAC,cAAA,KAAA,KACG8B,EAAMsB,MAETtD,EAAAC,EAAAC,cAAA,KAAA,KAAM8B,EAAMuB,SACVvD,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAWwB,EAAQM,GAAS,OAAS,QACxCjC,EAAAC,EAAAC,cAAA,IAAA,KAAGF,EAAAC,EAAAC,cAAA,IAAA,KAAGF,EAAAC,EAAAC,cAAA,IAAA,KAAA,aACNF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,UAAUmC,KAG5BtC,EAAAC,EAAAC,cAAA,KAAA,KACG8B,EAAMwB,SACPxD,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAWwB,EAAQM,GAAS,OAAS,QACxCjC,EAAAC,EAAAC,cAAA,IAAA,KAAIF,EAAAC,EAAAC,cAAA,IAAA,KAAGF,EAAAC,EAAAC,cAAA,IAAA,KAAA,mBACPF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,WAAW8C,KAG7BjD,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAW+B,GACZF,EAAMI,SADT,MACsBJ,EAAMK,WAD5B,IACyCF,MAM/C,OACEnC,EAAAC,EAAAC,cAAA,QAAA,CAAOC,UAAU,WACfH,EAAAC,EAAAC,cAAA,QAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,6BACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,UACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,cACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,WAGJF,EAAAC,EAAAC,cAAA,QAAA,KACG2B,KCzBM4B,EAxEG,SAAApD,GAAkB,IAAfY,EAAeZ,EAAfY,SAAeC,EAEJC,OAAAA,EAAAA,SAAAA,CAG5BC,MAAMH,EAASyC,UAAUpC,QAAQC,MAAK,IALNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAE3BS,EAF2BH,EAAA,GAElBI,EAFkBJ,EAAA,GA0B5BK,EAAOZ,EAASyC,UAAU5B,MAAM,GAAGC,UAAUpB,IAAI,SAACgD,EAAU1B,GAGhE,IADA,IAAM2B,EAAe,GAFqDrB,EAAA,SAGjEC,GAGP,IAAIC,EAASxB,EAASyB,QAAQC,KAAK,SAAAC,GAAM,OAAIA,EAAOnC,KAAOkD,EAASC,aAAapB,KAGjFoB,EAAad,KAAK9C,EAAAC,EAAAC,cAAA,KAAA,CAAIW,IAAK2B,EAAI,iBAAmBmB,EAASlD,IAAKgC,EAAOM,MAAQ,IAAMN,EAAOO,MAAM,GAAK,OANhGR,EAAI,EAAGA,EAAImB,EAASC,aAAatC,OAAQkB,IAAKD,EAA9CC,GAST,OACExC,EAAAC,EAAAC,cAAA,KAAA,CAAIW,IAAK,MAAQoB,EAAOnB,QAAS,WAAA,OA3BtB,SAAAmB,GAEb,IAAIkB,EAAQ1B,OAAA2B,EAAA,EAAA3B,CAAOE,GAEnBwB,EAASlB,IAAUkB,EAASlB,GAE5BL,EAAWuB,GAqB8BE,CAAOpB,KAC5CjC,EAAAC,EAAAC,cAAA,KAAA,KACGyD,EAASL,MAEZtD,EAAAC,EAAAC,cAAA,KAAA,KACGyD,EAASJ,UAEZvD,EAAAC,EAAAC,cAAA,KAAA,KACGyD,EAASC,aAAatC,OACvBtB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAWwB,EAAQM,GAAS,OAAS,QACxCjC,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,gBAAgByD,QAOxC,OACE5D,EAAAC,EAAAC,cAAA,QAAA,CAAOC,UAAU,aACfH,EAAAC,EAAAC,cAAA,QAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,6BACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,UACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,kBAGJF,EAAAC,EAAAC,cAAA,QAAA,KACG2B,KCsBMgC,EAxFC,SAAAxD,GAAkB,IAAfY,EAAeZ,EAAfY,SAAeC,EAEEC,OAAAA,EAAAA,SAAAA,CAAS,IAFXK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAEzB4C,EAFyBtC,EAAA,GAEduC,EAFcvC,EAAA,GAS5BwC,EAAa/C,EAASyB,QAG1BsB,EAAWC,KAAK,SAAChE,EAAGiE,GAAJ,OAAWjE,EAAE8C,MAAQmB,EAAEnB,MAAS,EAAK9C,EAAE8C,MAAQmB,EAAEnB,OAAU,EAAI,IAG/E,IAAMlB,EAAOmC,EAAWrD,IAAI,SAAC8B,EAAQR,GAGnC,KADmBQ,EAAOM,MAAMoB,cAAgB,IAAM1B,EAAOO,MAAMmB,eACnDC,WAAWN,GAGzB,OAAO,KAIT,IADA,IAAIzC,EAAU,EACLmB,EAAI,EAAGA,EAAIvB,EAASI,QAAQC,OAAQkB,IACvCvB,EAASI,QAAQmB,GAAGoB,aAAaS,SAAS5B,EAAOhC,KACnDY,IAKJ,IADA,IAAIqC,EAAY,EACPlB,EAAI,EAAGA,EAAIvB,EAASyC,UAAUpC,OAAQkB,IACzCvB,EAASyC,UAAUlB,GAAGoB,aAAaS,SAAS5B,EAAOhC,KACrDiD,IAKJ,IADA,IAAIpB,EAAS,EACJE,EAAI,EAAGA,EAAIvB,EAASI,QAAQC,OAAQkB,IACvCvB,EAASI,QAAQmB,GAAGK,QAAQwB,SAAS5B,EAAOhC,KAC9C6B,IAKJ,IADA,IAAIW,EAAU,EACLT,EAAI,EAAGA,EAAIvB,EAASI,QAAQC,OAAQkB,IACvCvB,EAASI,QAAQmB,GAAGS,QAAQoB,SAAS5B,EAAOhC,KAC9CwC,IAIJ,OACEjD,EAAAC,EAAAC,cAAA,KAAA,CAAIW,IAAK,MAAQoB,GACfjC,EAAAC,EAAAC,cAAA,KAAA,KAAKuC,EAAOM,MAAQ,IAAMN,EAAOO,OACjChD,EAAAC,EAAAC,cAAA,KAAA,KAAKuC,EAAO6B,QACZtE,EAAAC,EAAAC,cAAA,KAAA,KAAKuC,EAAO8B,MACZvE,EAAAC,EAAAC,cAAA,KAAA,KAAKmB,GACLrB,EAAAC,EAAAC,cAAA,KAAA,KAAKwD,GACL1D,EAAAC,EAAAC,cAAA,KAAA,KAAKoC,GACLtC,EAAAC,EAAAC,cAAA,KAAA,KAAK+C,MAKX,OACEjD,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WAAf,iBACgBH,EAAAC,EAAAC,cAAA,QAAA,CAAOsE,WAAS,EAACC,KAAK,OAAOC,SA/D5B,SAAAC,GACjB,IAAMC,EAAQD,EAAME,OAAOC,MAAMX,cACjCJ,EAAaa,MA8DX5E,EAAAC,EAAAC,cAAA,QAAA,KACEF,EAAAC,EAAAC,cAAA,QAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,QACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,cACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,SACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,SACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,gBACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,UACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,kBAGJF,EAAAC,EAAAC,cAAA,QAAA,KACG2B,cCsIIkD,EArND,SAAA1E,GAAkB,IAAfY,EAAeZ,EAAfY,SAAeC,EAEIC,OAAAA,EAAAA,SAAAA,CAAS,UAFbK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAEvB8D,EAFuBxD,EAAA,GAEZyD,EAFYzD,EAAA,GAAA0D,EAII/D,OAAAA,EAAAA,SAAAA,CAAS,eAJbgE,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAIvBE,EAJuBD,EAAA,GAIZE,EAJYF,EAAA,GAOxBG,EAAmB,SAACX,GAEA,SAApBA,EAAME,OAAOpE,IAAewE,EAAaN,EAAME,OAAOC,OAElC,SAApBH,EAAME,OAAOpE,IAAe4E,EAAaV,EAAME,OAAOC,QAItDS,EAAa,CAEjBC,YAAY,EACZC,qBAAqB,EACrBC,SAAU,CACRC,cAAe,GACfC,aAAc,IAEhBlF,MAAO,CACLmF,SAAS,EACTC,KAAMV,EAAY,WAAaJ,EAC/Be,SAAU,IAEZC,OAAQ,CACNH,SAAS,GAEXI,OAAQ,CACNC,MAAO,CAAC,CACNC,MAAO,CACLJ,SAAU,MAGdK,MAAO,CAAC,CACNC,SAAU,MACVF,MAAO,CACLG,aAAa,EACbP,SAAU,GACVQ,UAAW,OAOf7D,EAAU,GA0GdA,GAxGAA,EAAUzB,EAASyB,QAAQ/B,IAAI,SAAC8B,GAE9B,GAAkB,2BAAduC,GAA8C,0BAAhBvC,EAAO8B,KAEvC,OAAO,KAET,GAAkB,gBAAdS,GAA+C,eAAhBvC,EAAO8B,KAExC,OAAO,KAKT,GAAkB,gBAAda,EAA6B,CAG/B,IADA,IAAIoB,EAAS,EACJhE,EAAI,EAAGA,EAAIvB,EAASI,QAAQC,OAAQkB,IAC3C,IAAK,IAAIiE,EAAI,EAAGA,EAAIxF,EAASI,QAAQmB,GAAGK,QAAQvB,OAAQmF,IAClDxF,EAASI,QAAQmB,GAAGK,QAAQ4D,KAAOhE,EAAOhC,IAC5C+F,IAEEvF,EAASI,QAAQmB,GAAGS,QAAQwD,KAAOhE,EAAOhC,IAC5C+F,IAIN,MAAQ,CACNE,KAAMjE,EAAOM,MAAQ,IAAMN,EAAOO,MAAM,GAAK,IAC7CwD,OAAQA,GAKP,GAAkB,WAAdpB,EAAwB,CAG/B,IADA,IAAI9C,EAAS,EACJE,EAAI,EAAGA,EAAIvB,EAASI,QAAQC,OAAQkB,IAC3C,IAAK,IAAIiE,EAAI,EAAGA,EAAIxF,EAASI,QAAQmB,GAAGK,QAAQvB,OAAQmF,IAClDxF,EAASI,QAAQmB,GAAGK,QAAQ4D,KAAOhE,EAAOhC,IAC5C6B,IAIN,MAAQ,CACNoE,KAAMjE,EAAOM,MAAQ,IAAMN,EAAOO,MAAM,GAAK,IAC7CV,OAAQA,GAKP,GAAkB,wBAAd8C,EAA+B,CAGtC,IADA,IAAInC,EAAU,EACLT,EAAI,EAAGA,EAAIvB,EAASI,QAAQC,OAAQkB,IAC3C,IAAK,IAAIiE,EAAI,EAAGA,EAAIxF,EAASI,QAAQmB,GAAGK,QAAQvB,OAAQmF,IAClDxF,EAASI,QAAQmB,GAAGS,QAAQwD,KAAOhE,EAAOhC,IAC5CwC,IAIN,MAAQ,CACNyD,KAAMjE,EAAOM,MAAQ,IAAMN,EAAOO,MAAM,GAAK,IAC7CC,QAASA,GAKR,GAAkB,yBAAdmC,EAAsC,CAG7C,IADA,IAAIuB,EAAU,EACLnE,EAAI,EAAGA,EAAIvB,EAASI,QAAQC,OAAQkB,IAC3C,IAAK,IAAIiE,EAAI,EAAGA,EAAIxF,EAASI,QAAQmB,GAAGoB,aAAatC,OAAQmF,IACvDxF,EAASI,QAAQmB,GAAGoB,aAAa6C,KAAOhE,EAAOhC,IACjDkG,IAIN,MAAQ,CACND,KAAMjE,EAAOM,MAAQ,IAAMN,EAAOO,MAAM,GAAK,IAC7C2D,QAASA,GAKR,GAAkB,oBAAdvB,EAAiC,CAGxC,IADA,IAAIuB,EAAU,EACLnE,EAAI,EAAGA,EAAIvB,EAASyC,UAAUpC,OAAQkB,IAC7C,IAAK,IAAIiE,EAAI,EAAGA,EAAIxF,EAASyC,UAAUlB,GAAGoB,aAAatC,OAAQmF,IACzDxF,EAASyC,UAAUlB,GAAGoB,aAAa6C,KAAOhE,EAAOhC,IACnDkG,IAIN,MAAQ,CACND,KAAMjE,EAAOM,MAAQ,IAAMN,EAAOO,MAAM,GAAK,IAC7C2D,QAASA,GAIb,OAAO,QAISC,OAAO,SAACC,GAAD,OAAY,MAALA,IAGhC,IAAIC,EAAY,GACE,gBAAd1B,GACF1C,EAAQuB,KAAK,SAAChE,EAAGiE,GAAJ,OAAWjE,EAAEuG,OAAStC,EAAEsC,OAAU,EAAKvG,EAAEuG,OAAStC,EAAEsC,QAAW,EAAI,IAChFM,EAAYpE,EAAQ/B,IAAI,SAAC8B,GAAD,OAAYA,EAAO+D,UAEtB,WAAdpB,GACP1C,EAAQuB,KAAK,SAAChE,EAAGiE,GAAJ,OAAWjE,EAAEqC,OAAS4B,EAAE5B,OAAU,EAAKrC,EAAEqC,OAAS4B,EAAE5B,QAAW,EAAI,IAChFwE,EAAYpE,EAAQ/B,IAAI,SAAC8B,GAAD,OAAYA,EAAOH,UAEtB,wBAAd8C,GACP1C,EAAQuB,KAAK,SAAChE,EAAGiE,GAAJ,OAAWjE,EAAEgD,QAAUiB,EAAEjB,QAAW,EAAKhD,EAAEgD,QAAUiB,EAAEjB,SAAY,EAAI,IACpF6D,EAAYpE,EAAQ/B,IAAI,SAAC8B,GAAD,OAAYA,EAAOQ,WAEtB,yBAAdmC,GAAsD,oBAAdA,IAC/C1C,EAAQuB,KAAK,SAAChE,EAAGiE,GAAJ,OAAWjE,EAAE0G,QAAUzC,EAAEyC,QAAW,EAAK1G,EAAE0G,QAAUzC,EAAEyC,SAAY,EAAI,IACpFG,EAAYpE,EAAQ/B,IAAI,SAAC8B,GAAD,OAAYA,EAAOkE,WAG7CG,EAAYA,EAAUhF,MAAM,EAAG,IAG/B,IAAIiF,EAAcrE,EAAQ/B,IAAI,SAAC8B,GAAD,OAAYA,EAAOiE,OAK7CM,EAAO,CACTC,OAJFF,EAAcA,EAAYjF,MAAM,EAAG,IAKjCoF,SAAU,CAAC,CACTC,MAAO/B,EACPgC,gBAAiB,QACjBC,YAAa,QACbL,KAAMF,KAIV,OAAQ9G,EAAAC,EAAAC,cAAA,MAAA,CAAKO,GAAG,kBAAR,UACCT,EAAAC,EAAAC,cAAA,SAAA,CAAQO,GAAG,OAAOqE,MAAOE,EAAWN,SAAUY,GACnDtF,EAAAC,EAAAC,cAAA,SAAA,CAAQW,IAAI,MAAMiE,MAAM,UAAxB,UACA9E,EAAAC,EAAAC,cAAA,SAAA,CAAQW,IAAI,WAAWiE,MAAM,0BAA7B,0BACA9E,EAAAC,EAAAC,cAAA,SAAA,CAAQW,IAAI,YAAYiE,MAAM,eAA9B,gBACO9E,EAAAC,EAAAC,cAAA,KAAA,MALH,YAMGF,EAAAC,EAAAC,cAAA,SAAA,CAAQO,GAAG,OAAOqE,MAAOM,EAAWV,SAAUY,GACrDtF,EAAAC,EAAAC,cAAA,SAAA,CAAQW,IAAI,cAAciE,MAAM,eAAhC,eACA9E,EAAAC,EAAAC,cAAA,SAAA,CAAQW,IAAI,SAASiE,MAAM,UAA3B,UACA9E,EAAAC,EAAAC,cAAA,SAAA,CAAQW,IAAI,sBAAgBiE,MAAM,uBAAlC,uBACA9E,EAAAC,EAAAC,cAAA,SAAA,CAAQW,IAAI,aAAaiE,MAAM,wBAA/B,wBACA9E,EAAAC,EAAAC,cAAA,SAAA,CAAQW,IAAI,cAAciE,MAAM,mBAAhC,oBAEF9E,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAeN,KAAMA,EAAMO,QAAShC,MC5LzBiC,EAfC,SAAAnH,GAAuB,IACjCoH,EADanH,EAAoBD,EAApBC,QAAS0G,EAAW3G,EAAX2G,KAQ1B,MANgB,SAAZ1G,IAAoBmH,EAAmBzH,EAAAC,EAAAC,cAACwH,EAAD,OAC3B,YAAZpH,IAAuBmH,EAAmBzH,EAAAC,EAAAC,cAACyH,EAAD,CAAS1G,SAAU+F,KACjD,cAAZ1G,IAAyBmH,EAAmBzH,EAAAC,EAAAC,cAAC0H,EAAD,CAAW3G,SAAU+F,KACrD,YAAZ1G,IAAuBmH,EAAmBzH,EAAAC,EAAAC,cAAC2H,EAAD,CAAS5G,SAAU+F,KACjD,UAAZ1G,IAAqBmH,EAAmBzH,EAAAC,EAAAC,cAAC4H,EAAD,CAAO7G,SAAU+F,KAG3DhH,EAAAC,EAAAC,cAAA,UAAA,CAASC,UAAU,eAChBsH,8BC2BQM,EAvCH,WAAM,IAAA7G,EACcC,OAAAA,EAAAA,SAAAA,CAAS,QADvBK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACTZ,EADSkB,EAAA,GACAwG,EADAxG,EAAA,GAAA0D,EAEgB/D,OAAAA,EAAAA,SAAAA,CAAS,IAFzBgE,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAETjE,EAFSkE,EAAA,GAEC8C,EAFD9C,EAAA,GA8BhB,OAZA+C,OAAAA,EAAAA,UAAAA,CAAU,WAGRC,EAAAA,EAAMC,IAAI,iBACPC,KAAK,SAAAC,GACJL,EAAYK,EAAStB,QAEtBuB,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MAEf,IAGDxI,EAAAC,EAAAC,cAAA,UAAA,CAASC,UAAU,OACjBH,EAAAC,EAAAC,cAACyI,EAAD,MACA3I,EAAAC,EAAAC,cAAC0I,EAAD,CAAYtI,QAASA,EAASC,cAzBZ,SAAAoE,GAGpBqD,EAAWrD,EAAME,OAAOpE,OAuBtBT,EAAAC,EAAAC,cAAC2I,EAAD,CAASvI,QAASA,EAAS0G,KAAM/F,MC9BnB6H,QACW,cAA7BC,OAAOxF,SAASyF,UAEe,UAA7BD,OAAOxF,SAASyF,UAEhBD,OAAOxF,SAASyF,SAAShH,MACvB,2DCbNiH,EAAAA,EAASC,OAAOlJ,EAAAC,EAAAC,cAACiJ,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,KAAK,SAAAoB,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\n/* Component that displays the team banner on top of the page */\\nconst Header = () => {\\n  const teamname = \\\"Huutoniemen Hoki\\\";\\n  const shortname = \\\"HH\\\";\\n  return (\\n    <header className=\\\"App-header\\\">\\n      <p>{shortname}</p>\\n      <h1>{teamname}</h1>\\n    </header>\\n  );\\n}\\n\\nexport default Header;\",\"import React from 'react';\\n\\n/* Component to create page navigation */\\nconst Navigation = ({ content, changeContent }) => {\\n  //create object for the list elements attributes\\n  const links = [\\n    { \\\"id\\\": \\\"main\\\", \\\"title\\\": \\\"Pääsivu\\\" },\\n    { \\\"id\\\": \\\"matches\\\", \\\"title\\\": \\\"Ottelut\\\" },\\n    { \\\"id\\\": \\\"practises\\\", \\\"title\\\": \\\"Harjoitukset\\\" },\\n    { \\\"id\\\": \\\"players\\\", \\\"title\\\": \\\"Pelaajat\\\" },\\n    { \\\"id\\\": \\\"stats\\\", \\\"title\\\": \\\"Tilastot\\\" }\\n  ];\\n\\n  //create \\\"li\\\"-elements for the list\\n  const lilist = links.map((links) => {\\n\\n    if (links.id === content) {\\n      //link for the \\\"active\\\" page that is displayed, has unique class for styling\\n      return <li\\n        key={links.id}\\n        id={links.id}\\n        onClick={changeContent}\\n        className=\\\"active\\\">\\n        {links.title}\\n      </li>;\\n    }\\n    else {\\n      //links for \\\"inactive\\\" pages that are not displayed currently\\n      return <li\\n        key={links.id}\\n        id={links.id}\\n        onClick={changeContent}>\\n        {links.title}\\n      </li>;\\n    }\\n\\n  });\\n  return (\\n    <nav className=\\\"App-nav\\\">\\n      <ul>\\n        {lilist}\\n      </ul>\\n    </nav>\\n  );\\n}\\n\\nexport default Navigation;\",\"import React from 'react';\\n\\n/* Component for Main page contents */\\nconst Main = () => {\\n  return (\\n    <article>\\n      <p>Tervetuloa Huutoniemen Hoki -mielikuvitusjääkiekkojoukkueen kotisivulle!</p><br />\\n      <p>Täältä löydät tietoa joukkueen pelatuista peleistä, harjoituksista, pelaajista ja tilastoista.</p>\\n    </article>\\n  );\\n}\\n\\nexport default Main;\",\"import React, { useState } from 'react';\\n\\n/* Component for Matches-page contents */\\nconst Matches = ({ teamdata }) => {\\n\\n  //state to keep record of table rows that are \\\"opened\\\" to display scores/assists\\n  const [rowInfo, setRowInfo] = useState(\\n    //initializing the state: create a array that is the length of total rows\\n    //then set the data as boolean type \\\"false\\\" (not shown by default) for each element\\n    Array(teamdata.matches.length).fill(false)\\n  );\\n\\n  /* \\n  Handler that is called on a row click. \\n  Toggles state of scores & assists (display/hide)\\n  */\\n  const Toggle = index => {\\n    //copy the current state to a variable\\n    let rowInfos = [...rowInfo];\\n    //reverse the boolean on the array element stated by index parameter\\n    rowInfos[index] = !rowInfos[index];\\n    //update state with the changes\\n    setRowInfo(rowInfos);\\n  };\\n\\n  /* \\n  Mapping that creates the rows of matches from raw data.\\n  .slice(0) -creates a copy of the array, because .reverse mutates original\\n  .reverse -changes the order of matches so that the newest are on top of table\\n  */\\n  const rows = teamdata.matches.slice(0).reverse().map((match, index) => {\\n    let resultClass; //class for styling the result cell\\n    let result; //result of match to display in the result cell\\n    if (match.ourgoals < match.theirgoals) {\\n      resultClass = \\\"Defeat\\\";\\n      result = \\\"Häviö\\\";\\n    }\\n    else if (match.ourgoals > match.theirgoals) {\\n      resultClass = \\\"Win\\\";\\n      result = \\\"Voitto\\\";\\n    }\\n    else {\\n      resultClass = \\\"Draw\\\";\\n      result = \\\"Tasapeli\\\";\\n    }\\n\\n    //create list of scorers for the row\\n    const scores = [];\\n    for (let i = 0; i < match.scorers.length; i++) {\\n      //scorer is only listed as \\\"id\\\" in \\\"teamdata.scorers\\\"-array\\n      //player data must be fetched from object-array \\\"teamdata.players\\\" that matches the same player id\\n      let player = teamdata.players.find(object => object.id === match.scorers[i]);\\n      //push the list element into array, \\\"key\\\" must be unique for React requirements\\n      //1goal_of2 for example, first goal of match id 2 <- always creates unique key string\\n      scores.push(<li key={i + \\\"goal_of\\\" + match.id}>{player.lname + \\\" \\\" + player.fname[0] + \\\".\\\"}</li>);\\n    }\\n\\n    //create list of assists for the row, similar to the scorers above\\n    const assists = [];\\n    for (let i = 0; i < match.assists.length; i++) {\\n      let player = teamdata.players.find(object => object.id === match.assists[i]);\\n      assists.push(<li key={i + \\\"assist_of\\\" + match.id}>{player.lname + \\\" \\\" + player.fname[0] + \\\".\\\"}</li>);\\n    }\\n\\n    return (\\n      <tr key={\\\"row\\\" + index} onClick={() => Toggle(index)}>\\n        <td>\\n          {match.date}\\n        </td>\\n        <td >{match.location}\\n          <div className={rowInfo[index] ? \\\"Show\\\" : \\\"Hide\\\"}>\\n            <p><u><b>Maalit:</b></u></p>\\n            <ul className=\\\"Scores\\\">{scores}</ul>\\n          </div>\\n        </td>\\n        <td>\\n          {match.opponent}\\n          <div className={rowInfo[index] ? \\\"Show\\\" : \\\"Hide\\\"}>\\n            <p ><u><b>Syötöt:</b></u></p>\\n            <ul className=\\\"Assists\\\">{assists}</ul>\\n          </div>\\n        </td>\\n        <td className={resultClass}>\\n          {match.ourgoals} - {match.theirgoals} {result}\\n        </td>\\n      </tr>\\n    );\\n  });\\n\\n  return (\\n    <table className=\\\"Matches\\\">\\n      <thead>\\n        <tr>\\n          <th>Päivämäärä</th>\\n          <th>Paikka</th>\\n          <th>Vastustaja</th>\\n          <th>Tulos</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        {rows}\\n      </tbody>\\n    </table>\\n  );\\n}\\n\\nexport default Matches;\",\"import React, { useState } from 'react';\\n\\n/* Component for Practises-page contents */\\nconst Practises = ({ teamdata }) => {\\n  //state to keep record of table rows that are \\\"opened\\\" to display participants for practises\\n  const [rowInfo, setRowInfo] = useState(\\n    //initializing the state: create a array that is the length of total practise rows\\n    //then set the data as boolean type \\\"false\\\" (not shown by default) for each element\\n    Array(teamdata.practises.length).fill(false)\\n  );\\n\\n  /* \\n  Handler that is called on a row click. \\n  Toggles state of participants list (display/hide)\\n  */\\n  const Toggle = index => {\\n    //copy the current state to a variable\\n    let rowInfos = [...rowInfo];\\n    //reverse the boolean on the array element stated by index parameter\\n    rowInfos[index] = !rowInfos[index];\\n    //update state with the changes\\n    setRowInfo(rowInfos);\\n  };\\n\\n  /* \\n  Mapping that creates the rows of practises from raw data.\\n  .slice(0) -creates a copy of the array, because .reverse mutates original\\n  .reverse -changes the order of practises so that the newest are on top of table\\n  */\\n  const rows = teamdata.practises.slice(0).reverse().map((practise, index) => {\\n\\n    const participants = [];\\n    for (let i = 0; i < practise.participants.length; i++) {\\n      //participant is only listed as \\\"id\\\" in \\\"practise.participants\\\"-array\\n      //player data must be fetched from object-array \\\"teamdata.players\\\" that matches the same player id\\n      let player = teamdata.players.find(object => object.id === practise.participants[i]);\\n      //push the list element into array, \\\"key\\\" must be unique for React requirements\\n      //1participant_of2 for example, first participant of practise id 2 <- always creates unique key string\\n      participants.push(<li key={i + \\\"participant_of\\\" + practise.id}>{player.lname + \\\" \\\" + player.fname[0] + \\\".\\\"}</li>);\\n    }\\n\\n    return (\\n      <tr key={\\\"row\\\" + index} onClick={() => Toggle(index)}>\\n        <td>\\n          {practise.date}\\n        </td>\\n        <td >\\n          {practise.location}\\n        </td>\\n        <td>\\n          {practise.participants.length}\\n          <div className={rowInfo[index] ? \\\"Show\\\" : \\\"Hide\\\"}>\\n            <ul className=\\\"Participants\\\">{participants}</ul>\\n          </div>\\n        </td>\\n      </tr>\\n    );\\n  });\\n\\n  return (\\n    <table className=\\\"Practises\\\">\\n      <thead>\\n        <tr>\\n          <th>Päivämäärä</th>\\n          <th>Paikka</th>\\n          <th>Osallistujat</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        {rows}\\n      </tbody>\\n    </table>\\n  );\\n}\\n\\nexport default Practises;\",\"import React, { useState } from 'react';\\n\\n/* Component for Players-page contents */\\nconst Players = ({ teamdata }) => {\\n  //state to keep track of text input field\\n  const [userinput, setUserinput] = useState(\\\"\\\");\\n  //handler when change happens in text input, text is copied to the state as lowercase\\n  const findPlayer = event => {\\n    const input = event.target.value.toLowerCase();\\n    setUserinput(input);\\n  }\\n  //copy playerlist from teamdata prop to a new object array\\n  let playerlist = teamdata.players;\\n  //sort the players in ascending order by the alphabets of last name\\n  //see inner if clauses in the callback function\\n  playerlist.sort((a, b) => (a.lname > b.lname) ? 1 : (a.lname < b.lname) ? -1 : 0);\\n\\n  //creates the rows for the player table by mapping the playerlist array\\n  const rows = playerlist.map((player, index) => {\\n\\n    const playername = player.lname.toLowerCase() + \\\" \\\" + player.fname.toLowerCase();\\n    if (!playername.startsWith(userinput)) {\\n      //return null, if the user input doesnt match the last names first letters\\n      //making player not appear in the table\\n      return null;\\n    }\\n    //calculation of the matches where the player has appeared\\n    let matches = 0;\\n    for (let i = 0; i < teamdata.matches.length; i++) {\\n      if (teamdata.matches[i].participants.includes(player.id)) {\\n        matches++;\\n      }\\n    }\\n    //same as matches, but for practises\\n    let practises = 0;\\n    for (let i = 0; i < teamdata.practises.length; i++) {\\n      if (teamdata.practises[i].participants.includes(player.id)) {\\n        practises++;\\n      }\\n    }\\n    //calculate the scores of the player in matches\\n    let scores = 0;\\n    for (let i = 0; i < teamdata.matches.length; i++) {\\n      if (teamdata.matches[i].scorers.includes(player.id)) {\\n        scores++;\\n      }\\n    }\\n    //same as above for assists\\n    let assists = 0;\\n    for (let i = 0; i < teamdata.matches.length; i++) {\\n      if (teamdata.matches[i].assists.includes(player.id)) {\\n        assists++;\\n      }\\n    }\\n\\n    return (\\n      <tr key={\\\"row\\\" + index}>\\n        <td>{player.lname + \\\" \\\" + player.fname}</td>\\n        <td>{player.number}</td>\\n        <td>{player.role}</td>\\n        <td>{matches}</td>\\n        <td>{practises}</td>\\n        <td>{scores}</td>\\n        <td>{assists}</td>\\n      </tr>\\n    );\\n  });\\n\\n  return (\\n    <div className=\\\"Players\\\">\\n      Etsi pelaaja: <input autoFocus type=\\\"text\\\" onChange={findPlayer} />\\n      <table>\\n        <thead>\\n          <tr>\\n            <th>Nimi</th>\\n            <th>Pelinumero</th>\\n            <th>Rooli</th>\\n            <th>Pelit</th>\\n            <th>Harjoitukset</th>\\n            <th>Maalit</th>\\n            <th>Syötöt</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          {rows}\\n        </tbody>\\n      </table>\\n    </div>\\n  );\\n}\\n\\nexport default Players;\",\"import React, { useState } from 'react';\\n//npm install --save react-chartjs-2 chart.js\\nimport { HorizontalBar } from 'react-chartjs-2';\\n\\n/* Component for Statistics-page contents */\\nconst Stats = ({ teamdata }) => {\\n  //state to keep of track of what player roles should be included in the chart\\n  const [showroles, setShowroles] = useState(\\\"kaikki\\\");\\n  //state to keep track of the type of statistics to be shown in the chart\\n  const [statstype, setStatstype] = useState(\\\"Tehopisteet\\\");\\n\\n  //handler that changes states based on the dropdown list changes\\n  const selectionHandler = (event) => {\\n    //\\\"role\\\" is the id of dropdown list of player roles kaikki/hyökkääjät/puolustajat\\n    if (event.target.id === \\\"role\\\") setShowroles(event.target.value);\\n    //\\\"stat\\\" is the id of dropdown list of statistics that can be displayed in the chart\\n    if (event.target.id === \\\"stat\\\") setStatstype(event.target.value);\\n  }\\n\\n  //settings of the horizontal bar chart\\n  const barOptions = {\\n    //responsive \\\"true\\\" to make chart canvas scale to screen\\n    responsive: true,\\n    maintainAspectRatio: false,\\n    tooltips: {\\n      titleFontSize: 20,\\n      bodyFontSize: 20\\n    },\\n    title: {\\n      display: true,\\n      text: statstype + ' top10: ' + showroles,\\n      fontSize: 24\\n    },\\n    legend: {\\n      display: false\\n    },\\n    scales: {\\n      yAxes: [{\\n        ticks: {\\n          fontSize: 20\\n        }\\n      }],\\n      xAxes: [{\\n        position: 'top',\\n        ticks: {\\n          beginAtZero: true,\\n          fontSize: 20,\\n          precision: 0 // ticks are always one integer 1,2,3,4... NOT like 0.5,1.0,1.5\\n        }\\n      }]\\n    }\\n  };\\n\\n  //create list of player objects with information that is chosen by the user\\n  let players = {};\\n  //map the teamdata.players property shared by the Parent component\\n  players = teamdata.players.map((player) => {\\n\\n    if (showroles === \\\"hyökkääjät\\\" && player.role !== \\\"hyökkääjä\\\") {\\n      //do not include role that is not selected by the user in the dropdown list\\n      return null;\\n    };\\n    if (showroles === \\\"puolustajat\\\" && player.role !== \\\"puolustaja\\\") {\\n      //do not include role that is not selected by the user in the dropdown list\\n      return null;\\n    };\\n\\n    //if the user has chosen to display \\\"Tehopisteet\\\" from dropdown \\n    //this info will be included to player objects\\n    if (statstype === \\\"Tehopisteet\\\") {\\n      //calculate the points (scores + assists) made by the player in all matches\\n      let points = 0;\\n      for (let i = 0; i < teamdata.matches.length; i++) {\\n        for (let k = 0; k < teamdata.matches[i].scorers.length; k++) {\\n          if (teamdata.matches[i].scorers[k] === player.id) {\\n            points++;\\n          }\\n          if (teamdata.matches[i].assists[k] === player.id) {\\n            points++;\\n          }\\n        }\\n      }\\n      return ({\\n        name: player.lname + \\\" \\\" + player.fname[0] + \\\".\\\",\\n        points: points\\n      })\\n    }\\n    //if the user has chosen to display \\\"Maalit\\\" from dropdown\\n    //this info will be included to player objects\\n    else if (statstype === \\\"Maalit\\\") {\\n      //calculate the scores made by the player in all matches\\n      let scores = 0;\\n      for (let i = 0; i < teamdata.matches.length; i++) {\\n        for (let k = 0; k < teamdata.matches[i].scorers.length; k++) {\\n          if (teamdata.matches[i].scorers[k] === player.id) {\\n            scores++;\\n          }\\n        }\\n      }\\n      return ({\\n        name: player.lname + \\\" \\\" + player.fname[0] + \\\".\\\",\\n        scores: scores\\n      })\\n    }\\n    //if the user has chosen to display \\\"Syöttöpisteet\\\" from dropdown\\n    //this info will be included to player objects\\n    else if (statstype === \\\"Syöttöpisteet\\\") {\\n      //calculate the assists made by the player in all matches\\n      let assists = 0;\\n      for (let i = 0; i < teamdata.matches.length; i++) {\\n        for (let k = 0; k < teamdata.matches[i].scorers.length; k++) {\\n          if (teamdata.matches[i].assists[k] === player.id) {\\n            assists++;\\n          }\\n        }\\n      }\\n      return ({\\n        name: player.lname + \\\" \\\" + player.fname[0] + \\\".\\\",\\n        assists: assists\\n      })\\n    }\\n    //if the user has chosen to display \\\"Osall. harjoituksiin\\\" from dropdown\\n    //this info will be included to player objects\\n    else if (statstype === \\\"Osall. harjoituksiin\\\") {\\n      //calculate the entries made by the player in all matches\\n      let entries = 0;\\n      for (let i = 0; i < teamdata.matches.length; i++) {\\n        for (let k = 0; k < teamdata.matches[i].participants.length; k++) {\\n          if (teamdata.matches[i].participants[k] === player.id) {\\n            entries++;\\n          }\\n        }\\n      }\\n      return ({\\n        name: player.lname + \\\" \\\" + player.fname[0] + \\\".\\\",\\n        entries: entries\\n      })\\n    }\\n    //if the user has chosen to display \\\"Osall. peleihin\\\" from dropdown\\n    //this info will be included to player objects\\n    else if (statstype === \\\"Osall. peleihin\\\") {\\n      //calculate the scores made by the player in all practises\\n      let entries = 0;\\n      for (let i = 0; i < teamdata.practises.length; i++) {\\n        for (let k = 0; k < teamdata.practises[i].participants.length; k++) {\\n          if (teamdata.practises[i].participants[k] === player.id) {\\n            entries++;\\n          }\\n        }\\n      }\\n      return ({\\n        name: player.lname + \\\" \\\" + player.fname[0] + \\\".\\\",\\n        entries: entries\\n      })\\n    }\\n    //if the user has not chosen any statistic type in the dropdown (should never happen)\\n    return null;\\n  });\\n\\n  //filter null elements from array\\n  players = players.filter((e) => e != null);\\n\\n  //sort the player list depending on what statistics is chosen\\n  let chartdata = {};\\n  if (statstype === \\\"Tehopisteet\\\") {\\n    players.sort((a, b) => (a.points < b.points) ? 1 : (a.points > b.points) ? -1 : 0);\\n    chartdata = players.map((player) => player.points);\\n  }\\n  else if (statstype === \\\"Maalit\\\") {\\n    players.sort((a, b) => (a.scores < b.scores) ? 1 : (a.scores > b.scores) ? -1 : 0);\\n    chartdata = players.map((player) => player.scores);\\n  }\\n  else if (statstype === \\\"Syöttöpisteet\\\") {\\n    players.sort((a, b) => (a.assists < b.assists) ? 1 : (a.assists > b.assists) ? -1 : 0);\\n    chartdata = players.map((player) => player.assists);\\n  }\\n  else if (statstype === \\\"Osall. harjoituksiin\\\" || statstype === \\\"Osall. peleihin\\\") {\\n    players.sort((a, b) => (a.entries < b.entries) ? 1 : (a.entries > b.entries) ? -1 : 0);\\n    chartdata = players.map((player) => player.entries);\\n  }\\n  //include only top 10 in the player list\\n  chartdata = chartdata.slice(0, 10);\\n\\n  //create labels for the players in the chart\\n  let chartlabels = players.map((player) => player.name);\\n  //include only top 10, so amount of chartdata and labels match\\n  chartlabels = chartlabels.slice(0, 10);\\n\\n  //put all the info created into a single variable that can be passed to Chart.js HorizontalBar-component\\n  let data = {\\n    labels: chartlabels,\\n    datasets: [{\\n      label: statstype,\\n      backgroundColor: 'green',\\n      borderColor: 'green',\\n      data: chartdata,\\n    }]\\n  };\\n\\n  return (<div id=\\\"chartContainer\\\">\\n    Rooli: <select id=\\\"role\\\" value={showroles} onChange={selectionHandler}>\\n      <option key=\\\"all\\\" value=\\\"kaikki\\\">Kaikki</option>\\n      <option key=\\\"forwards\\\" value=\\\"hyökkääjät\\\">Hyökkääjät</option>\\n      <option key=\\\"defenders\\\" value=\\\"puolustajat\\\">Puolustajat</option>\\n    </select><br />\\n    Tilasto: <select id=\\\"stat\\\" value={statstype} onChange={selectionHandler}>\\n      <option key=\\\"Tehopisteet\\\" value=\\\"Tehopisteet\\\">Tehopisteet</option>\\n      <option key=\\\"Maalit\\\" value=\\\"Maalit\\\">Maalit</option>\\n      <option key=\\\"Syöttöpisteet\\\" value=\\\"Syöttöpisteet\\\">Syöttöpisteet</option>\\n      <option key=\\\"Osall.harj\\\" value=\\\"Osall. harjoituksiin\\\">Osall. harjoituksiin</option>\\n      <option key=\\\"Osall.pelit\\\" value=\\\"Osall. peleihin\\\">Osall. peleihin</option>\\n    </select>\\n    <hr />\\n    <HorizontalBar data={data} options={barOptions} />\\n  </div>\\n  );\\n}\\n\\nexport default Stats;\",\"import React from 'react';\\nimport Main from './Main';\\nimport Matches from './Matches';\\nimport Practises from './Practises';\\nimport Players from './Players';\\nimport Stats from './Stats';\\n\\n/* Component that switches the page view depending on the \\n\\\"content\\\" prop passed to it by the Parent component.\\nAlso shares the \\\"data\\\" prop as a prop for its child components */\\nconst Content = ({ content, data }) => {\\n  let selected_content;\\n  if (content === \\\"main\\\") selected_content = <Main />;\\n  if (content === \\\"matches\\\") selected_content = <Matches teamdata={data} />;\\n  if (content === \\\"practises\\\") selected_content = <Practises teamdata={data} />;\\n  if (content === \\\"players\\\") selected_content = <Players teamdata={data} />;\\n  if (content === \\\"stats\\\") selected_content = <Stats teamdata={data} />;\\n\\n  return (\\n    <section className=\\\"App-content\\\">\\n      {selected_content}\\n    </section>\\n  );\\n}\\n\\nexport default Content;\",\"import React, { useState, useEffect } from 'react';\\nimport Header from './Header';\\nimport Navigation from './Navigation';\\nimport Content from './Content';\\nimport './App.css';\\nimport axios from 'axios';\\n\\n/* The main component that contains all the components of the site */\\nconst App = () => {\\n  const [content, setContent] = useState(\\\"main\\\");\\n  const [teamdata, setTeamData] = useState([]);\\n\\n  /*\\n  Handler for changing page content depending on clicked navigation link\\n  Called from Navigation-component\\n  */\\n  const handleContent = event => {\\n    //changes state of \\\"content\\\" as the clicked element id\\n    //see Content-component for more info\\n    setContent(event.target.id);\\n  }\\n\\n  /* \\n  This will be run after page is loaded FIRST TIME only(because of []-parameter).\\n  Gets teamdata.json from server and sets it as \\\"teamdata\\\" state \\n  */\\n  useEffect(() => {\\n    //axios is the library for easy ajax calls\\n    //\\\"npm install --save axios\\\"\\n    axios.get('teamdata.json')\\n      .then(response => {\\n        setTeamData(response.data);\\n      })\\n      .catch(error => {\\n        console.log(error);\\n      });\\n  }, []);\\n\\n  return (\\n    <article className=\\\"App\\\">\\n      <Header />\\n      <Navigation content={content} changeContent={handleContent} />\\n      <Content content={content} data={teamdata} />\\n    </article>\\n  );\\n}\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{155:function(e,t,a){},172:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),r=a(53),i=a.n(r),s=a(3),c=function(){return l.a.createElement(\"header\",{className:\"App-header\"},l.a.createElement(\"p\",null,\"HH\"),l.a.createElement(\"h1\",null,\"Huutoniemen Hoki\"))},o=function(e){var t=e.content,a=e.changeContent,n=[{id:\"main\",title:\"P\\xe4\\xe4sivu\"},{id:\"matches\",title:\"Ottelut\"},{id:\"practises\",title:\"Harjoitukset\"},{id:\"players\",title:\"Pelaajat\"},{id:\"stats\",title:\"Tilastot\"}].map(function(e){return e.id===t?l.a.createElement(\"li\",{key:e.id,id:e.id,onClick:a,className:\"active\"},e.title):l.a.createElement(\"li\",{key:e.id,id:e.id,onClick:a},e.title)});return l.a.createElement(\"nav\",{className:\"App-nav\"},l.a.createElement(\"ul\",null,n))},u=function(){return l.a.createElement(\"article\",null,l.a.createElement(\"p\",null,\"Tervetuloa Huutoniemen Hoki -mielikuvitusj\\xe4\\xe4kiekkojoukkueen kotisivulle!\"),l.a.createElement(\"br\",null),l.a.createElement(\"p\",null,\"T\\xe4\\xe4lt\\xe4 l\\xf6yd\\xe4t tietoa joukkueen pelatuista peleist\\xe4, harjoituksista, pelaajista ja tilastoista.\"))},m=a(17),p=function(e){var t=e.teamdata,a=Object(n.useState)(Array(t.matches.length).fill(!1)),r=Object(s.a)(a,2),i=r[0],c=r[1],o=t.matches.slice(0).reverse().map(function(e,a){var n,r;e.ourgoals<e.theirgoals?(n=\"Defeat\",r=\"H\\xe4vi\\xf6\"):e.ourgoals>e.theirgoals?(n=\"Win\",r=\"Voitto\"):(n=\"Draw\",r=\"Tasapeli\");for(var s=[],o=function(a){var n=t.players.find(function(t){return t.id===e.scorers[a]});s.push(l.a.createElement(\"li\",{key:a+\"goal_of\"+e.id},n.lname+\" \"+n.fname[0]+\".\"))},u=0;u<e.scorers.length;u++)o(u);var p=[],h=function(a){var n=t.players.find(function(t){return t.id===e.assists[a]});p.push(l.a.createElement(\"li\",{key:a+\"assist_of\"+e.id},n.lname+\" \"+n.fname[0]+\".\"))};for(u=0;u<e.assists.length;u++)h(u);return l.a.createElement(\"tr\",{key:\"row\"+a,onClick:function(){return function(e){var t=Object(m.a)(i);t[e]=!t[e],c(t)}(a)}},l.a.createElement(\"td\",null,e.date),l.a.createElement(\"td\",null,e.location,l.a.createElement(\"div\",{className:i[a]?\"Show\":\"Hide\"},l.a.createElement(\"p\",null,l.a.createElement(\"u\",null,l.a.createElement(\"b\",null,\"Maalit:\"))),l.a.createElement(\"ul\",{className:\"Scores\"},s))),l.a.createElement(\"td\",null,e.opponent,l.a.createElement(\"div\",{className:i[a]?\"Show\":\"Hide\"},l.a.createElement(\"p\",null,l.a.createElement(\"u\",null,l.a.createElement(\"b\",null,\"Sy\\xf6t\\xf6t:\"))),l.a.createElement(\"ul\",{className:\"Assists\"},p))),l.a.createElement(\"td\",{className:n},e.ourgoals,\" - \",e.theirgoals,\" \",r))});return l.a.createElement(\"table\",{className:\"Matches\"},l.a.createElement(\"thead\",null,l.a.createElement(\"tr\",null,l.a.createElement(\"th\",null,\"P\\xe4iv\\xe4m\\xe4\\xe4r\\xe4\"),l.a.createElement(\"th\",null,\"Paikka\"),l.a.createElement(\"th\",null,\"Vastustaja\"),l.a.createElement(\"th\",null,\"Tulos\"))),l.a.createElement(\"tbody\",null,o))},h=function(e){var t=e.teamdata,a=Object(n.useState)(Array(t.practises.length).fill(!1)),r=Object(s.a)(a,2),i=r[0],c=r[1],o=t.practises.slice(0).reverse().map(function(e,a){for(var n=[],r=function(a){var r=t.players.find(function(t){return t.id===e.participants[a]});n.push(l.a.createElement(\"li\",{key:a+\"participant_of\"+e.id},r.lname+\" \"+r.fname[0]+\".\"))},s=0;s<e.participants.length;s++)r(s);return l.a.createElement(\"tr\",{key:\"row\"+a,onClick:function(){return function(e){var t=Object(m.a)(i);t[e]=!t[e],c(t)}(a)}},l.a.createElement(\"td\",null,e.date),l.a.createElement(\"td\",null,e.location),l.a.createElement(\"td\",null,e.participants.length,l.a.createElement(\"div\",{className:i[a]?\"Show\":\"Hide\"},l.a.createElement(\"ul\",{className:\"Participants\"},n))))});return l.a.createElement(\"table\",{className:\"Practises\"},l.a.createElement(\"thead\",null,l.a.createElement(\"tr\",null,l.a.createElement(\"th\",null,\"P\\xe4iv\\xe4m\\xe4\\xe4r\\xe4\"),l.a.createElement(\"th\",null,\"Paikka\"),l.a.createElement(\"th\",null,\"Osallistujat\"))),l.a.createElement(\"tbody\",null,o))},d=function(e){var t=e.teamdata,a=Object(n.useState)(\"\"),r=Object(s.a)(a,2),i=r[0],c=r[1],o=t.players;o.sort(function(e,t){return e.lname>t.lname?1:e.lname<t.lname?-1:0});var u=o.map(function(e,a){if(!(e.lname.toLowerCase()+\" \"+e.fname.toLowerCase()).startsWith(i))return null;for(var n=0,r=0;r<t.matches.length;r++)t.matches[r].participants.includes(e.id)&&n++;for(var s=0,c=0;c<t.practises.length;c++)t.practises[c].participants.includes(e.id)&&s++;for(var o=0,u=0;u<t.matches.length;u++)t.matches[u].scorers.includes(e.id)&&o++;for(var m=0,p=0;p<t.matches.length;p++)t.matches[p].assists.includes(e.id)&&m++;return l.a.createElement(\"tr\",{key:\"row\"+a},l.a.createElement(\"td\",null,e.lname+\" \"+e.fname),l.a.createElement(\"td\",null,e.number),l.a.createElement(\"td\",null,e.role),l.a.createElement(\"td\",null,n),l.a.createElement(\"td\",null,s),l.a.createElement(\"td\",null,o),l.a.createElement(\"td\",null,m))});return l.a.createElement(\"div\",{className:\"Players\"},\"Etsi pelaaja: \",l.a.createElement(\"input\",{autoFocus:!0,type:\"text\",onChange:function(e){var t=e.target.value.toLowerCase();c(t)}}),l.a.createElement(\"table\",null,l.a.createElement(\"thead\",null,l.a.createElement(\"tr\",null,l.a.createElement(\"th\",null,\"Nimi\"),l.a.createElement(\"th\",null,\"Pelinumero\"),l.a.createElement(\"th\",null,\"Rooli\"),l.a.createElement(\"th\",null,\"Pelit\"),l.a.createElement(\"th\",null,\"Harjoitukset\"),l.a.createElement(\"th\",null,\"Maalit\"),l.a.createElement(\"th\",null,\"Sy\\xf6t\\xf6t\"))),l.a.createElement(\"tbody\",null,u)))},E=a(54),f=function(e){var t=e.teamdata,a=Object(n.useState)(\"kaikki\"),r=Object(s.a)(a,2),i=r[0],c=r[1],o=Object(n.useState)(\"Tehopisteet\"),u=Object(s.a)(o,2),m=u[0],p=u[1],h=function(e){\"role\"===e.target.id&&c(e.target.value),\"stat\"===e.target.id&&p(e.target.value)},d={responsive:!0,maintainAspectRatio:!1,tooltips:{titleFontSize:20,bodyFontSize:20},title:{display:!0,text:m+\" top10: \"+i,fontSize:24},legend:{display:!1},scales:{yAxes:[{ticks:{fontSize:20}}],xAxes:[{position:\"top\",ticks:{beginAtZero:!0,fontSize:20,precision:0}}]}},f={};f=(f=t.players.map(function(e){if(\"hy\\xf6kk\\xe4\\xe4j\\xe4t\"===i&&\"hy\\xf6kk\\xe4\\xe4j\\xe4\"!==e.role)return null;if(\"puolustajat\"===i&&\"puolustaja\"!==e.role)return null;if(\"Tehopisteet\"===m){for(var a=0,n=0;n<t.matches.length;n++)for(var l=0;l<t.matches[n].scorers.length;l++)t.matches[n].scorers[l]===e.id&&a++,t.matches[n].assists[l]===e.id&&a++;return{name:e.lname+\" \"+e.fname[0]+\".\",points:a}}if(\"Maalit\"===m){for(var r=0,s=0;s<t.matches.length;s++)for(var c=0;c<t.matches[s].scorers.length;c++)t.matches[s].scorers[c]===e.id&&r++;return{name:e.lname+\" \"+e.fname[0]+\".\",scores:r}}if(\"Sy\\xf6tt\\xf6pisteet\"===m){for(var o=0,u=0;u<t.matches.length;u++)for(var p=0;p<t.matches[u].scorers.length;p++)t.matches[u].assists[p]===e.id&&o++;return{name:e.lname+\" \"+e.fname[0]+\".\",assists:o}}if(\"Osall. harjoituksiin\"===m){for(var h=0,d=0;d<t.matches.length;d++)for(var E=0;E<t.matches[d].participants.length;E++)t.matches[d].participants[E]===e.id&&h++;return{name:e.lname+\" \"+e.fname[0]+\".\",entries:h}}if(\"Osall. peleihin\"===m){for(var f=0,v=0;v<t.practises.length;v++)for(var k=0;k<t.practises[v].participants.length;k++)t.practises[v].participants[k]===e.id&&f++;return{name:e.lname+\" \"+e.fname[0]+\".\",entries:f}}return null})).filter(function(e){return null!=e});var v={};\"Tehopisteet\"===m?(f.sort(function(e,t){return e.points<t.points?1:e.points>t.points?-1:0}),v=f.map(function(e){return e.points})):\"Maalit\"===m?(f.sort(function(e,t){return e.scores<t.scores?1:e.scores>t.scores?-1:0}),v=f.map(function(e){return e.scores})):\"Sy\\xf6tt\\xf6pisteet\"===m?(f.sort(function(e,t){return e.assists<t.assists?1:e.assists>t.assists?-1:0}),v=f.map(function(e){return e.assists})):\"Osall. harjoituksiin\"!==m&&\"Osall. peleihin\"!==m||(f.sort(function(e,t){return e.entries<t.entries?1:e.entries>t.entries?-1:0}),v=f.map(function(e){return e.entries})),v=v.slice(0,10);var k=f.map(function(e){return e.name}),g={labels:k=k.slice(0,10),datasets:[{label:m,backgroundColor:\"green\",borderColor:\"green\",data:v}]};return l.a.createElement(\"div\",{id:\"chartContainer\"},\"Rooli: \",l.a.createElement(\"select\",{id:\"role\",value:i,onChange:h},l.a.createElement(\"option\",{key:\"all\",value:\"kaikki\"},\"Kaikki\"),l.a.createElement(\"option\",{key:\"forwards\",value:\"hy\\xf6kk\\xe4\\xe4j\\xe4t\"},\"Hy\\xf6kk\\xe4\\xe4j\\xe4t\"),l.a.createElement(\"option\",{key:\"defenders\",value:\"puolustajat\"},\"Puolustajat\")),l.a.createElement(\"br\",null),\"Tilasto: \",l.a.createElement(\"select\",{id:\"stat\",value:m,onChange:h},l.a.createElement(\"option\",{key:\"Tehopisteet\",value:\"Tehopisteet\"},\"Tehopisteet\"),l.a.createElement(\"option\",{key:\"Maalit\",value:\"Maalit\"},\"Maalit\"),l.a.createElement(\"option\",{key:\"Sy\\xf6tt\\xf6pisteet\",value:\"Sy\\xf6tt\\xf6pisteet\"},\"Sy\\xf6tt\\xf6pisteet\"),l.a.createElement(\"option\",{key:\"Osall.harj\",value:\"Osall. harjoituksiin\"},\"Osall. harjoituksiin\"),l.a.createElement(\"option\",{key:\"Osall.pelit\",value:\"Osall. peleihin\"},\"Osall. peleihin\")),l.a.createElement(\"hr\",null),l.a.createElement(E.a,{data:g,options:d}))},v=function(e){var t,a=e.content,n=e.data;return\"main\"===a&&(t=l.a.createElement(u,null)),\"matches\"===a&&(t=l.a.createElement(p,{teamdata:n})),\"practises\"===a&&(t=l.a.createElement(h,{teamdata:n})),\"players\"===a&&(t=l.a.createElement(d,{teamdata:n})),\"stats\"===a&&(t=l.a.createElement(f,{teamdata:n})),l.a.createElement(\"section\",{className:\"App-content\"},t)},k=(a(155),a(56)),g=a.n(k),y=function(){var e=Object(n.useState)(\"main\"),t=Object(s.a)(e,2),a=t[0],r=t[1],i=Object(n.useState)([]),u=Object(s.a)(i,2),m=u[0],p=u[1];return Object(n.useEffect)(function(){g.a.get(\"teamdata.json\").then(function(e){p(e.data)}).catch(function(e){console.log(e)})},[]),l.a.createElement(\"article\",{className:\"App\"},l.a.createElement(c,null),l.a.createElement(o,{content:a,changeContent:function(e){r(e.target.id)}}),l.a.createElement(v,{content:a,data:m}))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(l.a.createElement(y,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},57:function(e,t,a){e.exports=a(172)}},[[57,1,2]]]);","extractedComments":[]}