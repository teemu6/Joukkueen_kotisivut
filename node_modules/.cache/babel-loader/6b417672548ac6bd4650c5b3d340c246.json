{"ast":null,"code":"import _slicedToArray from \"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst Stats = ({\n  teamdata\n}) => {\n  const _useState = useState(\"kaikki\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        showroles = _useState2[0],\n        setShowroles = _useState2[1];\n\n  const _useState3 = useState(\"Tehopisteet\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        statstype = _useState4[0],\n        setStatstype = _useState4[1];\n\n  const selectionHandler = event => {\n    setShowroles(event.target.value);\n  };\n\n  const barOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      titleFontSize: 20,\n      bodyFontSize: 20\n    },\n    title: {\n      display: true,\n      text: statstype + ' top10: ' + showroles,\n      fontSize: 24\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontSize: 20\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true,\n          fontSize: 20\n        }\n      }]\n    }\n  };\n  let players = {};\n  players = teamdata.players.map(player => {\n    if (showroles === \"hyökkääjät\" && player.role !== \"hyökkääjä\") {\n      return null;\n    }\n\n    ;\n\n    if (showroles === \"puolustajat\" && player.role !== \"puolustaja\") {\n      return null;\n    }\n\n    ;\n\n    if (statstype === \"Tehopisteet\") {\n      let points = 0;\n\n      for (let i = 0; i < teamdata.matches.length; i++) {\n        for (let k = 0; k < teamdata.matches[i].scorers.length; k++) {\n          if (teamdata.matches[i].scorers[k] === player.id) {\n            points++;\n          }\n\n          if (teamdata.matches[i].assists[k] === player.id) {\n            points++;\n          }\n        }\n      }\n\n      return {\n        name: player.lname + \" \" + player.fname[0] + \".\",\n        points: points\n      };\n    }\n  });\n  players = players.filter(e => e != null);\n\n  if (statstype === \"Tehopisteet\") {\n    players.sort((a, b) => a.points < b.points ? 1 : a.points > b.points ? -1 : 0);\n  }\n\n  let chartlabels = players.map(player => player.name);\n  let chartdata = players.map(player => player.points);\n  chartlabels = chartlabels.slice(0, 10);\n  chartdata = chartdata.slice(0, 10);\n  let data = {\n    labels: chartlabels,\n    datasets: [{\n      label: statstype,\n      backgroundColor: 'green',\n      borderColor: 'green',\n      data: chartdata\n    }]\n  };\n  return React.createElement(\"div\", {\n    id: \"chartContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Roolit: \", React.createElement(\"select\", {\n    id: \"roles\",\n    value: showroles,\n    onChange: selectionHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    key: \"all\",\n    value: \"kaikki\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Kaikki\"), React.createElement(\"option\", {\n    key: \"forwards\",\n    value: \"hy\\xF6kk\\xE4\\xE4j\\xE4t\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Hy\\xF6kk\\xE4\\xE4j\\xE4t\"), React.createElement(\"option\", {\n    key: \"defenders\",\n    value: \"puolustajat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Puolustajat\")), React.createElement(HorizontalBar, {\n    data: data,\n    options: barOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }));\n};\n\nexport default Stats;","map":{"version":3,"sources":["/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Stats.js"],"names":["React","useState","useEffect","HorizontalBar","Stats","teamdata","showroles","setShowroles","statstype","setStatstype","selectionHandler","event","target","value","barOptions","responsive","maintainAspectRatio","tooltips","titleFontSize","bodyFontSize","title","display","text","fontSize","legend","scales","yAxes","ticks","xAxes","beginAtZero","players","map","player","role","points","i","matches","length","k","scorers","id","assists","name","lname","fname","filter","e","sort","a","b","chartlabels","chartdata","slice","data","labels","datasets","label","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst Stats = ({ teamdata }) => {\n  const [showroles, setShowroles] = useState(\"kaikki\");\n  const [statstype, setStatstype] = useState(\"Tehopisteet\");\n\n  const selectionHandler = (event) => {\n    setShowroles(event.target.value);\n  }\n\n  const barOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      titleFontSize: 20,\n      bodyFontSize: 20\n    },\n    title: {\n      display: true,\n      text: statstype + ' top10: ' + showroles,\n      fontSize: 24\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontSize: 20\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true,\n          fontSize: 20\n        }\n      }]\n    }\n  };\n\n  let players = {};\n  players = teamdata.players.map((player) => {\n\n    if (showroles === \"hyökkääjät\" && player.role !== \"hyökkääjä\") {\n      return null;\n    };\n    if (showroles === \"puolustajat\" && player.role !== \"puolustaja\") {\n      return null;\n    };\n\n    if (statstype === \"Tehopisteet\"){\n    let points = 0;\n    for (let i = 0; i < teamdata.matches.length; i++) {\n      for (let k = 0; k < teamdata.matches[i].scorers.length; k++) {\n        if (teamdata.matches[i].scorers[k] === player.id) {\n          points++;\n        }\n        if (teamdata.matches[i].assists[k] === player.id) {\n          points++;\n        }\n      }\n    }\n    return ({\n      name: player.lname + \" \" + player.fname[0] + \".\",\n      points: points\n    })\n  }\n  });\n\n  players = players.filter((e) => e != null);\n  if (statstype === \"Tehopisteet\"){\n  players.sort((a, b) => (a.points < b.points) ? 1 : (a.points > b.points) ? -1 : 0);\n  }\n\n  let chartlabels = players.map((player) => player.name);\n  let chartdata = players.map((player) => player.points);\n  chartlabels = chartlabels.slice(0, 10);\n  chartdata = chartdata.slice(0, 10);\n  let data = {\n    labels: chartlabels,\n    datasets: [{\n      label: statstype,\n      backgroundColor: 'green',\n      borderColor: 'green',\n      data: chartdata,\n    }]\n  };\n\n  return (<div id=\"chartContainer\">\n    Roolit: <select id=\"roles\" value={showroles} onChange={selectionHandler}>\n      <option key=\"all\" value=\"kaikki\">Kaikki</option>\n      <option key=\"forwards\" value=\"hyökkääjät\">Hyökkääjät</option>\n      <option key=\"defenders\" value=\"puolustajat\">Puolustajat</option>\n    </select>\n    <HorizontalBar data={data} options={barOptions} />\n  </div>\n  );\n}\n\nexport default Stats;"]},"metadata":{},"sourceType":"module"}