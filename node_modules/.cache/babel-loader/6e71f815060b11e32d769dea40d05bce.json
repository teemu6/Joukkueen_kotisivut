{"ast":null,"code":"import _slicedToArray from \"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst Stats = ({\n  teamdata\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstload = _useState2[0],\n        setFirstload = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        chartdata = _useState4[0],\n        setChartdata = _useState4[1];\n\n  const _useState5 = useState(\"kaikki\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showroles = _useState6[0],\n        setShowroles = _useState6[1];\n\n  const _useState7 = useState(\"Tehopisteet\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        statstype = _useState8[0],\n        setStatstype = _useState8[1];\n\n  const barOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      titleFontSize: 20,\n      bodyFontSize: 20\n    },\n    title: {\n      display: true,\n      text: statstype + ' top10: ' + showroles,\n      fontSize: 24\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontSize: 20\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true,\n          fontSize: 20\n        }\n      }]\n    }\n  };\n\n  const selectionHandler = event => {\n    if (event.target.id === \"roles\") setShowroles(event.target.value);\n    console.log(event.target.value);\n  }; //useEffect(() => {showPoints();});\n\n\n  const showPoints = () => {\n    let players = {};\n    players = teamdata.players.map(player => {\n      if (showroles === \"hyökkääjät\" && player.role !== \"hyökkääjä\") {\n        return null;\n      }\n\n      ;\n\n      if (showroles === \"puolustajat\" && player.role !== \"puolustaja\") {\n        return null;\n      }\n\n      ;\n      let points = 0;\n\n      for (let i = 0; i < teamdata.matches.length; i++) {\n        for (let k = 0; k < teamdata.matches[i].scorers.length; k++) {\n          if (teamdata.matches[i].scorers[k] === player.id) {\n            points++;\n          }\n\n          if (teamdata.matches[i].assists[k] === player.id) {\n            points++;\n          }\n        }\n      }\n\n      return {\n        name: player.lname + \" \" + player.fname[0] + \".\",\n        points: points\n      };\n    });\n    players = players.filter(e => e != null);\n    players.sort((a, b) => a.points < b.points ? 1 : a.points > b.points ? -1 : 0);\n    let chartlabels = players.map(player => player.name);\n    let chartdata = players.map(player => player.points);\n    chartlabels = chartlabels.slice(0, 10);\n    chartdata = chartdata.slice(0, 10);\n    let data = {\n      labels: chartlabels,\n      datasets: [{\n        label: statstype,\n        backgroundColor: 'green',\n        borderColor: 'green',\n        data: chartdata\n      }]\n    };\n    setChartdata(data);\n  };\n\n  if (firstload) {\n    showPoints();\n    setFirstload(false);\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    id: \"chartContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Valitse n\\xE4ytett\\xE4v\\xE4t roolit:\", React.createElement(\"select\", {\n    id: \"roles\",\n    value: showroles,\n    onChange: selectionHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    key: \"all\",\n    value: \"kaikki\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Kaikki\"), React.createElement(\"option\", {\n    key: \"forwards\",\n    value: \"hy\\xF6kk\\xE4\\xE4j\\xE4t\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Hy\\xF6kk\\xE4\\xE4j\\xE4t\"), React.createElement(\"option\", {\n    key: \"defenders\",\n    value: \"puolustajat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Puolustajat\")), React.createElement(HorizontalBar, {\n    data: chartdata,\n    options: barOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }));\n};\n\nexport default Stats;","map":{"version":3,"sources":["/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Stats.js"],"names":["React","useState","useEffect","HorizontalBar","Stats","teamdata","firstload","setFirstload","chartdata","setChartdata","showroles","setShowroles","statstype","setStatstype","barOptions","responsive","maintainAspectRatio","tooltips","titleFontSize","bodyFontSize","title","display","text","fontSize","legend","scales","yAxes","ticks","xAxes","beginAtZero","selectionHandler","event","target","id","value","console","log","showPoints","players","map","player","role","points","i","matches","length","k","scorers","assists","name","lname","fname","filter","e","sort","a","b","chartlabels","slice","data","labels","datasets","label","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst Stats = ({ teamdata }) => {\n  const [firstload, setFirstload] = useState(true);\n  const [chartdata, setChartdata] = useState({});\n  const [showroles, setShowroles] = useState(\"kaikki\");\n  const [statstype, setStatstype] = useState(\"Tehopisteet\");\n\n  const barOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      titleFontSize: 20,\n      bodyFontSize: 20\n    },\n    title: {\n      display: true,\n      text: statstype + ' top10: ' + showroles,\n      fontSize: 24\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontSize: 20\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true,\n          fontSize: 20\n        }\n      }]\n    }\n  };\n\n  const selectionHandler = (event) => {\n  if (event.target.id === \"roles\") setShowroles(event.target.value);\n  console.log(event.target.value);\n  }\n\n  //useEffect(() => {showPoints();});\n\n  const showPoints = () => {\n    let players = {};\n    players = teamdata.players.map((player) => {\n\n      if (showroles === \"hyökkääjät\" && player.role !== \"hyökkääjä\") {\n        return null;\n      };\n      if (showroles === \"puolustajat\" && player.role !== \"puolustaja\") {\n        return null;\n      };\n\n      let points = 0;\n      for (let i = 0; i < teamdata.matches.length; i++) {\n        for (let k = 0; k < teamdata.matches[i].scorers.length; k++) {\n          if (teamdata.matches[i].scorers[k] === player.id) {\n            points++;\n          }\n          if (teamdata.matches[i].assists[k] === player.id) {\n            points++;\n          }\n        }\n      }\n      return ({\n        name: player.lname + \" \" + player.fname[0] + \".\",\n        points: points\n      });\n    });\n\n    players = players.filter((e) => e != null);\n    players.sort((a, b) => (a.points < b.points) ? 1 : (a.points > b.points) ? -1 : 0);\n\n    let chartlabels = players.map((player) => player.name);\n    let chartdata = players.map((player) => player.points);\n    chartlabels = chartlabels.slice(0, 10);\n    chartdata = chartdata.slice(0, 10);\n    let data = {\n      labels: chartlabels,\n      datasets: [{\n        label: statstype,\n        backgroundColor: 'green',\n        borderColor: 'green',\n        data: chartdata,\n      }]\n    };\n    setChartdata(data);\n  }\n\n  if (firstload) {\n    showPoints();\n    setFirstload(false);\n  };\n\n  return (<div id=\"chartContainer\">\n    Valitse näytettävät roolit: \n    <select id=\"roles\" value={showroles} onChange={selectionHandler}>\n      <option key=\"all\" value=\"kaikki\">Kaikki</option>\n      <option key= \"forwards\" value=\"hyökkääjät\">Hyökkääjät</option>\n      <option key=\"defenders\" value=\"puolustajat\">Puolustajat</option>\n    </select>\n    <HorizontalBar data={chartdata} options={barOptions} />\n  </div>\n  );\n}\n\nexport default Stats;"]},"metadata":{},"sourceType":"module"}