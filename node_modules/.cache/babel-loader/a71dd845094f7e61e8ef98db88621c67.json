{"ast":null,"code":"import _slicedToArray from \"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Stats.js\";\nimport React, { useState } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst Stats = ({\n  teamdata\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        chartdata = _useState2[0],\n        setChartdata = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstload = _useState4[0],\n        setFirstload = _useState4[1];\n\n  const barOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: 'Tehopisteet all-time'\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontSize: 16\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true,\n          stepSize: 1,\n          fontSize: 16\n        }\n      }]\n    }\n  };\n\n  const showPoints = () => {\n    const players = teamdata.players.map((player, index) => {\n      let points = 0;\n\n      for (let i = 0; i < teamdata.matches.length; i++) {\n        for (let k = 0; k < teamdata.matches[i].scorers.length; k++) {\n          if (teamdata.matches[i].scorers[k] === player.id) {\n            points++;\n          }\n\n          if (teamdata.matches[i].assists[k] === player.id) {\n            points++;\n          }\n        }\n      }\n\n      return {\n        name: player.lname + \" \" + player.fname[0] + \".\",\n        points: points\n      };\n    });\n    players.sort((a, b) => a.points < b.points ? 1 : a.points > b.points ? -1 : 0);\n    let chartlabels = players.map(player => player.name);\n    let chartdata = players.map(player => player.points);\n    chartlabels = chartlabels.slice(0, 10);\n    chartdata = chartdata.slice(0, 10);\n    let data = {\n      labels: chartlabels,\n      datasets: [{\n        label: \"Tehopisteet\",\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: chartdata\n      }]\n    };\n    setChartdata(data); //document.getElementById(\"myCheck\").checked = true;\n  };\n\n  if (firstload) {\n    showPoints();\n    setFirstload(false);\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    id: \"chartContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(HorizontalBar, {\n    data: chartdata,\n    options: barOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n};\n\nexport default Stats;","map":{"version":3,"sources":["/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Stats.js"],"names":["React","useState","HorizontalBar","Stats","teamdata","chartdata","setChartdata","firstload","setFirstload","barOptions","responsive","maintainAspectRatio","title","display","text","legend","scales","yAxes","ticks","fontSize","xAxes","beginAtZero","stepSize","showPoints","players","map","player","index","points","i","matches","length","k","scorers","id","assists","name","lname","fname","sort","a","b","chartlabels","slice","data","labels","datasets","label","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst Stats = ({ teamdata }) => {\n  const [chartdata, setChartdata] = useState({});\n  const [firstload, setFirstload] = useState(true);\n  const barOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: 'Tehopisteet all-time'\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontSize: 16\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true,\n          stepSize: 1,\n          fontSize: 16\n        }\n      }]\n    }\n  };\n  const showPoints = () => {\n    const players = teamdata.players.map((player, index) => {\n      let points = 0;\n      for (let i = 0; i < teamdata.matches.length; i++) {\n        for (let k = 0; k < teamdata.matches[i].scorers.length; k++) {\n          if (teamdata.matches[i].scorers[k] === player.id) {\n            points++;\n          }\n          if (teamdata.matches[i].assists[k] === player.id) {\n            points++;\n          }\n        }\n      }\n      return ({\n        name: player.lname + \" \" + player.fname[0] + \".\",\n        points: points\n      });\n    });\n    players.sort((a, b) => (a.points < b.points) ? 1 : (a.points > b.points) ? -1 : 0);\n\n    let chartlabels = players.map((player) => player.name);\n    let chartdata = players.map((player) => player.points);\n    chartlabels = chartlabels.slice(0,10);\n    chartdata = chartdata.slice(0,10);\n    let data = {\n      labels: chartlabels,\n      datasets: [{\n        label: \"Tehopisteet\",\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: chartdata,\n      }]\n    };\n    setChartdata(data);\n    //document.getElementById(\"myCheck\").checked = true;\n  }\n  if (firstload) {\n    showPoints();\n    setFirstload(false);\n  };\n\n  return (<div id=\"chartContainer\">\n    <HorizontalBar data={chartdata} options={barOptions} />\n  </div>\n  );\n}\n\nexport default Stats;"]},"metadata":{},"sourceType":"module"}