{"ast":null,"code":"import _slicedToArray from \"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Matches.js\";\nimport React, { useState } from 'react';\n/* Component for Matches-page contents */\n\nconst Matches = ({\n  teamdata\n}) => {\n  //state to keep record of table rows that are \"opened\" to display scores/assists\n  const _useState = useState( //initializing the state: create a array that is the length of total rows\n  //then set the data as boolean type \"false\" (not shown by default) for each element\n  Array(teamdata.matches.length).fill(false)),\n        _useState2 = _slicedToArray(_useState, 2),\n        rowInfo = _useState2[0],\n        setRowInfo = _useState2[1];\n  /* \n  Handler that is called on a row click. \n  Toggles state of scores & assists (display/hide)\n  */\n\n\n  const Toggle = index => {\n    //copy the current state to a variable\n    let rowInfos = [...rowInfo]; //reverse the boolean on the array element stated by index parameter\n\n    rowInfos[index] = !rowInfos[index]; //update state with the changes\n\n    setRowInfo(rowInfos);\n  }; //mapping that creates the rows of matches\n  //slice(0).reverse changes the order of matches so that the newest are on top of table\n\n\n  const rows = teamdata.matches.reverse().map((match, index) => {\n    let resultClass;\n    let result;\n\n    if (match.ourgoals < match.theirgoals) {\n      resultClass = \"Defeat\";\n      result = \"Häviö\";\n    } else if (match.ourgoals > match.theirgoals) {\n      resultClass = \"Win\";\n      result = \"Voitto\";\n    } else {\n      resultClass = \"Draw\";\n      result = \"Tasapeli\";\n    }\n\n    const scores = [];\n\n    for (let i = 0; i < match.scorers.length; i++) {\n      let player = teamdata.players.find(object => object.id === match.scorers[i]);\n      scores.push(React.createElement(\"li\", {\n        key: i + \"goal_of\" + match.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, player.lname + \" \" + player.fname[0] + \".\"));\n    }\n\n    const assists = [];\n\n    for (let i = 0; i < match.assists.length; i++) {\n      let player = teamdata.players.find(object => object.id === match.assists[i]);\n      assists.push(React.createElement(\"li\", {\n        key: i + \"assist_of\" + match.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, player.lname + \" \" + player.fname[0] + \".\"));\n    }\n\n    return React.createElement(\"tr\", {\n      key: \"row\" + index,\n      onClick: () => Toggle(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, match.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, match.location, React.createElement(\"div\", {\n      className: rowInfo[index] ? \"Show\" : \"Hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Maalit:\"))), React.createElement(\"ul\", {\n      className: \"Scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, scores))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, match.opponent, React.createElement(\"div\", {\n      className: rowInfo[index] ? \"Show\" : \"Hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Sy\\xF6t\\xF6t:\"))), React.createElement(\"ul\", {\n      className: \"Assists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, assists))), React.createElement(\"td\", {\n      className: resultClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, match.ourgoals, \" - \", match.theirgoals, \" \", result));\n  });\n  return React.createElement(\"table\", {\n    className: \"Matches\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"P\\xE4iv\\xE4m\\xE4\\xE4r\\xE4\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Paikka\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Vastustaja\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Tulos\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, rows));\n};\n\nexport default Matches;","map":{"version":3,"sources":["/home/teemu/Omat/Koulu/kesaopinnot/web_ohjelmointi/harjtyo/src/Matches.js"],"names":["React","useState","Matches","teamdata","Array","matches","length","fill","rowInfo","setRowInfo","Toggle","index","rowInfos","rows","reverse","map","match","resultClass","result","ourgoals","theirgoals","scores","i","scorers","player","players","find","object","id","push","lname","fname","assists","date","location","opponent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n/* Component for Matches-page contents */\nconst Matches = ({ teamdata }) => {\n\n  //state to keep record of table rows that are \"opened\" to display scores/assists\n  const [rowInfo, setRowInfo] = useState(\n    //initializing the state: create a array that is the length of total rows\n    //then set the data as boolean type \"false\" (not shown by default) for each element\n    Array(teamdata.matches.length).fill(false)\n  );\n  \n  /* \n  Handler that is called on a row click. \n  Toggles state of scores & assists (display/hide)\n  */\n  const Toggle = index => {\n    //copy the current state to a variable\n    let rowInfos = [...rowInfo];\n    //reverse the boolean on the array element stated by index parameter\n    rowInfos[index] = !rowInfos[index];\n    //update state with the changes\n    setRowInfo(rowInfos);\n  };\n\n  //mapping that creates the rows of matches\n  //slice(0).reverse changes the order of matches so that the newest are on top of table\n  const rows = teamdata.matches.reverse().map((match, index) => {\n    let resultClass;\n    let result;\n    if (match.ourgoals < match.theirgoals) {\n      resultClass = \"Defeat\";\n      result = \"Häviö\";\n    }\n    else if (match.ourgoals > match.theirgoals) {\n      resultClass = \"Win\";\n      result = \"Voitto\";\n    }\n    else {\n      resultClass = \"Draw\";\n      result = \"Tasapeli\";\n    }\n\n    const scores = [];\n    for (let i = 0; i < match.scorers.length; i++) {\n      let player = teamdata.players.find(object => object.id === match.scorers[i]);\n      scores.push(<li key={i + \"goal_of\" + match.id}>{player.lname + \" \" + player.fname[0] + \".\"}</li>);\n    }\n\n    const assists = [];\n    for (let i = 0; i < match.assists.length; i++) {\n      let player = teamdata.players.find(object => object.id === match.assists[i]);\n      assists.push(<li key={i + \"assist_of\" + match.id}>{player.lname + \" \" + player.fname[0] + \".\"}</li>);\n    }\n\n    return (\n      <tr key={\"row\" + index} onClick={() => Toggle(index)}>\n        <td>\n          {match.date}\n        </td>\n        <td >{match.location}\n          <div className={rowInfo[index] ? \"Show\" : \"Hide\"}>\n            <p><u><b>Maalit:</b></u></p>\n            <ul className=\"Scores\">{scores}</ul>\n          </div>\n        </td>\n        <td>\n          {match.opponent}\n          <div className={rowInfo[index] ? \"Show\" : \"Hide\"}>\n            <p ><u><b>Syötöt:</b></u></p>\n            <ul className=\"Assists\">{assists}</ul>\n          </div>\n        </td>\n        <td className={resultClass}>\n          {match.ourgoals} - {match.theirgoals} {result}\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <table className=\"Matches\">\n      <thead>\n        <tr>\n          <th>Päivämäärä</th>\n          <th>Paikka</th>\n          <th>Vastustaja</th>\n          <th>Tulos</th>\n        </tr>\n      </thead>\n      <tbody>\n        {rows}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Matches;"]},"metadata":{},"sourceType":"module"}